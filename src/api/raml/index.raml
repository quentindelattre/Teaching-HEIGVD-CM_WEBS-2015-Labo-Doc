#%RAML 0.8
---
title: API Resource
baseUri: https://localhost/api/
protocols: [HTTPS]
mediaType: application/json

traits:
  - auth: !include _traits/auth.raml

/users:
  description: User resource.
  get:
    is: [auth: { roles: 'staff' }]
    description: Retrieve the list of the users.
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                },
                {
                  "id": "54d8ae163fd30364605c81a9",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+8211332",
                  "roles": [
                    "citizen",
                    "staff"
                  ]
                },
                ...
              ]
  post:
    description: Create a new user.
    body:
      application/json:
        example: |
          {
            "firstname": "Romain",
            "lastname": "Terieur",
            "phone": "+6624582",
            "roles": [
              "citizen"
            ]
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "id": "54d8ae163fd30364605c81a4",
                "firstname": "Romain",
                "lastname": "Terieur",
                "phone": "+6624582",
                "roles": [
                  "citizen"
                ]
              }

  /{id}:
    get:
      is: [auth: {roles: 'any'} ]
      description: Retrieve the details of a specific user.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                }
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update the details of a specific user.
      body:
        application/json:
          example: |
            {
              "firstname": "Romain",
              "lastname": "Terieur",
              "phone": "+6624582",
              "roles": [
                "citizen"
              ]
            }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "firstname": "Romain",
                  "lastname": "Terieur",
                  "phone": "+6624582",
                  "roles": [
                    "citizen"
                  ]
                }
    delete:
      is: [auth: {roles: 'staff'} ]
      description: Delete a specific user.
      responses:
        204:
          body:
/issueTypes:
  description: Issue types resource.
  get:
    is: [auth: { roles: 'any' }]
    description: Retrieve the list of the issue types.
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "234kgj253452o8zkjg",
                  "name": "Light",
                  "description": "Broken street light"
                },
                {
                  "id": "63kjh3453uiziu565",
                  "name": "Manhole",
                  "description": "Uncovered manhole cover"
                },
                ...
              ]
  post:
    description: Create a new issue type.
    body:
      application/json:
        example: |
          {
            "name": "Oil",
            "lastname": "Oil spilled on the street"
          }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                "id": "43jk5hi4u689zhi73f",
                "name": "Oil",
                "lastname": "Oil spilled on the street"
              }

  /{id}:
    get:
      is: [auth: {roles: 'any'} ]
      description: Retrieve the details of a specific issue type.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "234kgj253452o8zkjg",
                  "name": "Light",
                  "description": "Broken street light"
                }
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update the details of a specific issue type.
      body:
        application/json:
          example: |
            {
              "name": "Street light",
              "description": "Broken street light"
              }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "234kgj253452o8zkjg",
                  "name": "Street light",
                  "description": "Broken street light"
                }
    delete:
      is: [auth: {roles: 'staff'} ]
      description: Delete a specific issue type.
      responses:
        204:
          body:
/actions:
  description: Actions resource.
  get:
    is: [auth: { roles: 'staff' }]
    description: Retrieve the list of all actions.
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "245uiz345iuz4323itu9",
                  "author": "Terieur, Romain",
                  "date": "2015-02-17",
                  "actionType": "addComment"
                },
                {
                  "id": "45iugt34867tz9g3z44",
                  "author": "Terieur, Romain",
                  "date": "2015-02-15",
                  "actionType": "solveIssue"
                },
                ...
              ]
/issues:
  description: Issues resource.
  get:
    is: [auth: { roles: 'staff' }]
    description: Retrieve the list of the issues.
    responses:
      200:
        body:
          application/json:
            example: |
              [
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "author": "oneuser",
                  "type": "braked lamp",
                  "description": "lorem ipsum",
                  "place": {
                    "S12368°"
                    "N98723°"
                  },
                  "status": "resolved",
                  "comments": {
                    "author": "12863971",
                    "date": "DD.MM.DDDD",
                    "content": "lorem ipsum"
                  },
                  "tags": "fireintheplace",
                  "action": "forthemomentnothing",
                }
                ...
              ]
  post:
    description: Create a new issues.
    body:
      application/json:
        example: |
          {
                  "author": "oneuser",
                  "type": "braked lamp",
                  "description": "lorem ipsum",
                  "place": {
                    "S12368°"
                    "N98723°"
                  },
                  "status": "resolved",
                  "comments": {
                    "author": "12863971",
                    "date": "DD.MM.DDDD",
                    "content": "lorem ipsum"
                  },
                  "tags": "fireintheplace",
                  "action": "forthemomentnothing",
                }
    responses:
      201:
        body:
          application/json:
            example: |
              {
                  "id": "54d8ae163fd30364605c81a4",
                  "author": "oneuser",
                  "type": "braked lamp",
                  "description": "lorem ipsum",
                  "place": {
                    "S12368°"
                    "N98723°"
                  },
                  "status": "resolved",
                  "comments": {
                    "author": "12863971",
                    "date": "DD.MM.DDDD",
                    "content": "lorem ipsum"
                  },
                  "tags": "fireintheplace",
                  "action": "forthemomentnothing",
                }
  /{id}:
    get:
      is: [auth: {roles: 'any'} ]
      description: Retrieve the details of a specific issues.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "author": "oneuser",
                  "type": "braked lamp",
                  "description": "lorem ipsum",
                  "place": {
                    "S12368°"
                    "N98723°"
                  },
                  "status": "resolved",
                  "comments": {
                    "author": "12863971",
                    "date": "DD.MM.DDDD",
                    "content": "lorem ipsum"
                  },
                  "tags": "fireintheplace",
                  "action": "forthemomentnothing",
                }
    put:
      is: [auth: {roles: 'staff'} ]
      description: Update the details of a specific issues.
      body:
        application/json:
          example: |
            {
                  "id": "54d8ae163fd30364605c81a4",
                  "author": "oneuser",
                  "type": "braked lamp",
                  "description": "lorem ipsum",
                  "place": {
                    "S12368°"
                    "N98723°"
                  },
                  "status": "resolved",
                  "comments": {
                    "author": "12863971",
                    "date": "DD.MM.DDDD",
                    "content": "lorem ipsum"
                  },
                  "tags": "fireintheplace",
                  "action": "forthemomentnothing",
                }
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "author": "oneuserchanged",
                  "type": "braked lamp",
                  "description": "lorem ipsum",
                  "place": {
                    "S12368°"
                    "N98723°"
                  },
                  "status": "resolved",
                  "comments": {
                    "author": "12863971",
                    "date": "DD.MM.DDDD",
                    "content": "lorem ipsum"
                  },
                  "tags": "fireintheplace",
                  "action": "forthemomentnothing",
                }
  /{id}/actions:
    get:
      is: [auth: {roles: 'staff'} ]
      description: Retrieve the details of a specific action.
      responses:
        200:
          body:
            application/json:
              example: |
                {
                  "id": "54d8ae163fd30364605c81a4",
                  "author": "oneuser",
                  "type": "braked lamp",
                  "description": "lorem ipsum",
                  "place": {
                    "S12368°"
                    "N98723°"
                  },
                  "status": "resolved",
                  "comments": {
                    "author": "12863971",
                    "date": "DD.MM.DDDD",
                    "content": "lorem ipsum"
                  },
                  "tags": "fireintheplace",
                  "action": "forthemomentnothing",
                }
    post:
      description: Create a new action on an issue.
      body:
        application/json:
          example: |
            {
                    "author": "oneuser",
                    "type": "braked lamp",
                    "description": "lorem ipsum",
                    "place": {
                      "S12368°"
                      "N98723°"
                    },
                    "status": "resolved",
                    "comments": {
                      "author": "12863971",
                      "date": "DD.MM.DDDD",
                      "content": "lorem ipsum"
                    },
                    "tags": "fireintheplace",
                    "action": "forthemomentnothing",
                  }
      responses:
        201:
          body:
            application/json:
              example: |
                {
                    "id": "54d8ae163fd30364605c81a4",
                    "author": "oneuser",
                    "type": "braked lamp",
                    "description": "lorem ipsum",
                    "place": {
                      "S12368°"
                      "N98723°"
                    },
                    "status": "resolved",
                    "comments": {
                      "author": "12863971",
                      "date": "DD.MM.DDDD",
                      "content": "lorem ipsum"
                    },
                    "tags": "fireintheplace",
                    "action": "forthemomentnothing",
                  }
/data:
  description: Data resource.
  /populate:
    post:
      description: Allow to populate random data to have a starting situation.
      responses:
        200:
          body: